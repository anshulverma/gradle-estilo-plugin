apply plugin: 'maven-publish'

ext {
  bintrayUser = project.property('bintrayUser')
  bintrayKey = project.property('bintrayKey')

  def pomMetadata = {
    resolveStrategy = Closure.DELEGATE_FIRST
    name "${project.name}"
    description 'Gradle plugin that provides an easy way to configure and use checkstyle.'
    url 'https://github.com/anshulverma/gradle-estilo-plugin'

    licenses {
      license {
        name 'The Apache Software License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        distribution 'repo'
      }
    }
    scm {
      url 'https://github.com/anshulverma/gradle-estilo-plugin'
      connection 'scm:https://anshulvermas@github.com/anshulverma/gradle-estilo-plugin.git'
      developerConnection 'scm:git://github.com/anshulverma/gradle-estilo-plugin.git'
    }
    developers {
      developer {
        id 'anshulverma'
        name 'Anshul Verma'
        email 'anshul.verma86@gmail.com'
        roles {
          role 'owner'
          role 'developer'
        }
      }
    }
  }

  pomConfig = {
    def root = asNode()
    def dependencies = root.dependencies
    def allDependencies = dependencies.'*'

    if (project.configurations.hasProperty('provided')) {
      allDependencies.findAll() {
        project.configurations.provided.allDependencies.find { dep ->
          dep.name == it.artifactId.text()
        }
      }.each() {
        it.scope*.value = 'provided'
      }
    }

    //Fix issue with maven-publish plugin setting compile deps to runtime
    allDependencies.findAll() {
      it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
        dep.name == it.artifactId.text()
      }
    }.each() {
      it.scope*.value = 'compile'
    }

    allDependencies
        .findAll { it.artifactId.text() == 'groovy-all' }
        .each { it.scope*.value = 'test' }


    root.children().last() + pomMetadata
  }

  releaseRepos = {
    def artifactRepoBase = 'http://oss.jfrog.org/artifactory'
    def repoPrefix = 'oss'
    def type = isSnapshot() ? 'snapshot' : 'release'
    maven {
      name 'jFrogOss'
      url "${artifactRepoBase}/${repoPrefix}-${type}-local"
      credentials {
        username = "${bintrayUser}"
        password = "${bintrayKey}"
      }
    }
  }
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'
tasks.withType(Javadoc) {
  options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task packageSources(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

if (JavaVersion.current().isJava8Compatible()) {
  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
  }
}

publishing {
  repositories {
    configure(rootProject.ext.releaseRepos)
  }

  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact packageSources {
        classifier "sources"
      }
      artifact(javadocJar) {
        classifier = 'javadoc'
      }
      pom.withXml pomConfig
    }
  }
}

def isSnapshot() {
  project.version.toString().contains('SNAPSHOT')
}

if (!isSnapshot()) {
  apply plugin: 'com.jfrog.bintray'

  bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenJava']
    dryRun = project.hasProperty('dryRun') ? Boolean.valueOf(project.property('dryRun')) : false
    publish = true
    pkg {
      name = 'gradle-estilo-plugin'
      repo = 'gradle-plugins'
      desc = 'Gradle plugin that provides an easy way to configure and use checkstyle.'
      websiteUrl = 'https://github.com/anshulverma/gradle-estilo-plugin'
      issueTrackerUrl = 'https://github.com/anshulverma/gradle-estilo-plugin/issues'
      vcsUrl = 'https://github.com/anshulverma/gradle-estilo-plugin.git'
      licenses = ['Apache-2.0']
      labels = ['gradle', 'plugin', 'checkstyle']
      publicDownloadNumbers = true
      version {
        attributes = ['gradle-plugin': 'net.anshulverma.gradle:gradle-estilo-plugin']
      }
    }
  }
}

jar {
  manifest {
    attributes 'Implementation-Title': 'Gradle Estilo plugin',
               'Implementation-Version': version,
               'Built-By': 'Anshul Verma <anshul.verma86@gmail.com>',
               'Built-Date': new Date(),
               'Built-JDK': System.getProperty('java.version'),
               'Built-Gradle': gradle.gradleVersion
  }
}
